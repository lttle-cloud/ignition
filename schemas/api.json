{
  "services": [
    {
      "name": "Core",
      "tag": "core",
      "crate_path": "resources::core",
      "namespaced": false,
      "methods": [
        {
          "name": "me",
          "namespaced": false,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "me"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "Me"
          }
        },
        {
          "name": "get_registry_robot",
          "namespaced": false,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "registry"
            },
            {
              "type": "static",
              "value": "robot"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "RegistryRobot"
          }
        },
        {
          "name": "get_registry_builder_robot",
          "namespaced": false,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "registry"
            },
            {
              "type": "static",
              "value": "builder-robot"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "RegistryRobot"
          }
        },
        {
          "name": "list_namespaces",
          "namespaced": false,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "namespaces"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "ListNamespaces"
          }
        },
        {
          "name": "delete_namespace",
          "namespaced": false,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "namespaces"
            },
            {
              "type": "static",
              "value": "delete"
            }
          ],
          "request": {
            "type": "schema",
            "name": "DeleteNamespaceParams"
          },
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "DeleteNamespaceResponse"
          }
        },
        {
          "name": "stream_logs",
          "namespaced": true,
          "verb": "WS",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "logs"
            }
          ],
          "request": {
            "type": "schema",
            "name": "LogStreamParams"
          },
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "LogStreamItem"
          }
        },
        {
          "name": "exec",
          "namespaced": true,
          "verb": "WS",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "exec"
            }
          ],
          "request": {
            "type": "schema",
            "name": "ExecParams"
          },
          "response": {
            "type": "RawSocket"
          }
        },
        {
          "name": "query",
          "namespaced": false,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "query"
            }
          ],
          "request": {
            "type": "schema",
            "name": "QueryParams"
          },
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "QueryResponse"
          }
        },
        {
          "name": "alloc_builder",
          "namespaced": false,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "core"
            },
            {
              "type": "static",
              "value": "build"
            },
            {
              "type": "static",
              "value": "alloc"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "AllocatedBuilder"
          }
        }
      ]
    },
    {
      "name": "Gadget",
      "tag": "gadget",
      "crate_path": "resources::gadget",
      "namespaced": false,
      "methods": [
        {
          "name": "run_init",
          "namespaced": false,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "gadget"
            },
            {
              "type": "static",
              "value": "run"
            },
            {
              "type": "static",
              "value": "init"
            }
          ],
          "request": {
            "type": "schema",
            "name": "GadgetInitRunParams"
          },
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "GadgetInitRunResponse"
          }
        }
      ]
    },
    {
      "name": "App",
      "tag": "app",
      "crate_path": "resources::app",
      "namespaced": true,
      "methods": [
        {
          "name": "get",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "app"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": false,
            "optional": false,
            "names": [
              "AppV1",
              "AppStatus"
            ]
          }
        },
        {
          "name": "list",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "app"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": true,
            "optional": false,
            "names": [
              "AppV1",
              "AppStatus"
            ]
          }
        },
        {
          "name": "delete",
          "namespaced": true,
          "verb": "DELETE",
          "path": [
            {
              "type": "static",
              "value": "app"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": null
        },
        {
          "name": "apply",
          "namespaced": true,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "app"
            }
          ],
          "request": {
            "type": "schema",
            "name": "App"
          },
          "response": null
        },
        {
          "name": "get_status",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "app"
            },
            {
              "type": "resource_name"
            },
            {
              "type": "static",
              "value": "status"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "AppStatus"
          }
        }
      ]
    },
    {
      "name": "Machine",
      "tag": "machine",
      "crate_path": "resources::machine",
      "namespaced": true,
      "methods": [
        {
          "name": "get",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "machine"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": false,
            "optional": false,
            "names": [
              "MachineV1",
              "MachineStatus"
            ]
          }
        },
        {
          "name": "list",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "machine"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": true,
            "optional": false,
            "names": [
              "MachineV1",
              "MachineStatus"
            ]
          }
        },
        {
          "name": "delete",
          "namespaced": true,
          "verb": "DELETE",
          "path": [
            {
              "type": "static",
              "value": "machine"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": null
        },
        {
          "name": "apply",
          "namespaced": true,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "machine"
            }
          ],
          "request": {
            "type": "schema",
            "name": "Machine"
          },
          "response": null
        },
        {
          "name": "get_status",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "machine"
            },
            {
              "type": "resource_name"
            },
            {
              "type": "static",
              "value": "status"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "MachineStatus"
          }
        }
      ]
    },
    {
      "name": "Service",
      "tag": "service",
      "crate_path": "resources::service",
      "namespaced": true,
      "methods": [
        {
          "name": "get",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "service"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": false,
            "optional": false,
            "names": [
              "ServiceV1",
              "ServiceStatus"
            ]
          }
        },
        {
          "name": "list",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "service"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": true,
            "optional": false,
            "names": [
              "ServiceV1",
              "ServiceStatus"
            ]
          }
        },
        {
          "name": "delete",
          "namespaced": true,
          "verb": "DELETE",
          "path": [
            {
              "type": "static",
              "value": "service"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": null
        },
        {
          "name": "apply",
          "namespaced": true,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "service"
            }
          ],
          "request": {
            "type": "schema",
            "name": "Service"
          },
          "response": null
        },
        {
          "name": "get_status",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "service"
            },
            {
              "type": "resource_name"
            },
            {
              "type": "static",
              "value": "status"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "ServiceStatus"
          }
        }
      ]
    },
    {
      "name": "Certificate",
      "tag": "certificate",
      "crate_path": "resources::certificate",
      "namespaced": true,
      "methods": [
        {
          "name": "get",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "certificate"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": false,
            "optional": false,
            "names": [
              "CertificateV1",
              "CertificateStatus"
            ]
          }
        },
        {
          "name": "list",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "certificate"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": true,
            "optional": false,
            "names": [
              "CertificateV1",
              "CertificateStatus"
            ]
          }
        },
        {
          "name": "delete",
          "namespaced": true,
          "verb": "DELETE",
          "path": [
            {
              "type": "static",
              "value": "certificate"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": null
        },
        {
          "name": "apply",
          "namespaced": true,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "certificate"
            }
          ],
          "request": {
            "type": "schema",
            "name": "Certificate"
          },
          "response": null
        },
        {
          "name": "get_status",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "certificate"
            },
            {
              "type": "resource_name"
            },
            {
              "type": "static",
              "value": "status"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "CertificateStatus"
          }
        }
      ]
    },
    {
      "name": "Volume",
      "tag": "volume",
      "crate_path": "resources::volume",
      "namespaced": true,
      "methods": [
        {
          "name": "get",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "volume"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": false,
            "optional": false,
            "names": [
              "VolumeV1",
              "VolumeStatus"
            ]
          }
        },
        {
          "name": "list",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "volume"
            }
          ],
          "request": null,
          "response": {
            "type": "tuple",
            "list": true,
            "optional": false,
            "names": [
              "VolumeV1",
              "VolumeStatus"
            ]
          }
        },
        {
          "name": "delete",
          "namespaced": true,
          "verb": "DELETE",
          "path": [
            {
              "type": "static",
              "value": "volume"
            },
            {
              "type": "resource_name"
            }
          ],
          "request": null,
          "response": null
        },
        {
          "name": "apply",
          "namespaced": true,
          "verb": "PUT",
          "path": [
            {
              "type": "static",
              "value": "volume"
            }
          ],
          "request": {
            "type": "schema",
            "name": "Volume"
          },
          "response": null
        },
        {
          "name": "get_status",
          "namespaced": true,
          "verb": "GET",
          "path": [
            {
              "type": "static",
              "value": "volume"
            },
            {
              "type": "resource_name"
            },
            {
              "type": "static",
              "value": "status"
            }
          ],
          "request": null,
          "response": {
            "type": "schema",
            "list": false,
            "optional": false,
            "name": "VolumeStatus"
          }
        }
      ]
    }
  ],
  "defs": {
    "AllocatedBuilder": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "client_cert_pem": {
          "type": "string"
        },
        "client_key_pem": {
          "type": "string"
        },
        "ca_cert_pem": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "client_cert_pem",
        "client_key_pem",
        "ca_cert_pem"
      ],
      "title": "AllocatedBuilder",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "App": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "app": {
              "$ref": "#/$defs/AppV1"
            }
          },
          "required": [
            "app"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "app.v1": {
              "$ref": "#/$defs/AppV1"
            }
          },
          "required": [
            "app.v1"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AppAllocatedService": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hash": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "domain": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "name",
        "hash"
      ]
    },
    "AppExpose": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0,
          "maximum": 65535
        },
        "connection-tracking": {
          "anyOf": [
            {
              "$ref": "#/$defs/ServiceTargetConnectionTracking"
            },
            {
              "type": "null"
            }
          ]
        },
        "external": {
          "anyOf": [
            {
              "$ref": "#/$defs/AppExposeExternal"
            },
            {
              "type": "null"
            }
          ]
        },
        "internal": {
          "anyOf": [
            {
              "$ref": "#/$defs/AppExposeInternal"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "port"
      ]
    },
    "AppExposeExternal": {
      "type": "object",
      "properties": {
        "host": {
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0,
          "maximum": 65535
        },
        "protocol": {
          "$ref": "#/$defs/ServiceBindExternalProtocol"
        }
      },
      "required": [
        "protocol"
      ]
    },
    "AppExposeInternal": {
      "type": "object",
      "properties": {
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "AppStatus": {
      "type": "object",
      "properties": {
        "machine_hash": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "machine_name": {
          "type": [
            "string",
            "null"
          ]
        },
        "allocated_services": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/AppAllocatedService"
          }
        }
      },
      "required": [
        "machine_hash",
        "allocated_services"
      ]
    },
    "AppV1": {
      "type": "object",
      "properties": {
        "tags": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "name": {
          "type": "string"
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "build": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineBuild"
            },
            {
              "type": "null"
            }
          ]
        },
        "resources": {
          "$ref": "#/$defs/MachineResources"
        },
        "restart-policy": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineRestartPolicy"
            },
            {
              "type": "null"
            }
          ]
        },
        "mode": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineMode"
            },
            {
              "type": "null"
            }
          ]
        },
        "volumes": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/MachineVolumeBinding"
          }
        },
        "command": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "environment": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "depends-on": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/MachineDependency"
          }
        },
        "expose": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "$ref": "#/$defs/AppExpose"
          }
        }
      },
      "required": [
        "name",
        "resources"
      ]
    },
    "Certificate": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "certificate": {
              "$ref": "#/$defs/CertificateV1"
            }
          },
          "required": [
            "certificate"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "certificate.v1": {
              "$ref": "#/$defs/CertificateV1"
            }
          },
          "required": [
            "certificate.v1"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CertificateIssuer": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "auto": {
              "type": "object",
              "properties": {
                "provider": {
                  "description": "References a provider name from ignition.toml [[cert-provider]] config",
                  "type": "string"
                },
                "email": {
                  "description": "Optional email override. If specified, takes precedence over provider's default-email.\nIf not specified, falls back to provider's default-email from config.\nValidation should error if neither this nor provider config has an email.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": null
                },
                "renewal": {
                  "description": "Optional renewal configuration. Uses sensible defaults if not specified.",
                  "anyOf": [
                    {
                      "$ref": "#/$defs/CertificateRenewalConfig"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "provider"
              ]
            }
          },
          "required": [
            "auto"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "manual": {
              "type": "object",
              "properties": {
                "cert-path": {
                  "type": "string"
                },
                "key-path": {
                  "type": "string"
                },
                "ca-path": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": null
                }
              },
              "required": [
                "cert-path",
                "key-path"
              ]
            }
          },
          "required": [
            "manual"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CertificateRenewalConfig": {
      "type": "object",
      "properties": {
        "days-before-expiry": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0,
          "description": "Days before expiry to start renewal attempts. Default: 30 days."
        },
        "retry-interval-hours": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0,
          "description": "Hours between renewal retry attempts on failure. Default: 12 hours."
        }
      }
    },
    "CertificateState": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "pending",
            "pending-acme-account",
            "pending-dns-resolution",
            "ready",
            "renewing",
            "failed",
            "expired",
            "revoked"
          ]
        },
        {
          "type": "object",
          "properties": {
            "pending-order": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "pending-order"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "pending-challenge": {
              "type": "string"
            }
          },
          "required": [
            "pending-challenge"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "validating": {
              "type": "string"
            }
          },
          "required": [
            "validating"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "issuing": {
              "type": "string"
            }
          },
          "required": [
            "issuing"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CertificateStatus": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/$defs/CertificateState"
        },
        "not_before": {
          "type": [
            "string",
            "null"
          ]
        },
        "not_after": {
          "type": [
            "string",
            "null"
          ]
        },
        "last_failure_reason": {
          "type": [
            "string",
            "null"
          ]
        },
        "renewal_time": {
          "type": [
            "string",
            "null"
          ]
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auto_provider_name": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "state",
        "domains"
      ]
    },
    "CertificateV1": {
      "type": "object",
      "properties": {
        "tags": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "name": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issuer": {
          "$ref": "#/$defs/CertificateIssuer"
        }
      },
      "required": [
        "name",
        "domains",
        "issuer"
      ]
    },
    "DeleteNamespaceParams": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "confirm": {
          "type": "boolean"
        }
      },
      "required": [
        "namespace",
        "confirm"
      ],
      "title": "DeleteNamespaceParams",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "DeleteNamespaceResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/DeletedResource"
          }
        },
        "did_delete": {
          "type": "boolean"
        }
      },
      "required": [
        "resources",
        "did_delete"
      ],
      "title": "DeleteNamespaceResponse",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$defs": {
        "DeletedResource": {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "kind",
            "name"
          ]
        }
      }
    },
    "ExecParams": {
      "type": "object",
      "properties": {
        "machine_name": {
          "type": "string"
        },
        "command": {
          "type": "string"
        },
        "stdin": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "tty": {
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "required": [
        "machine_name",
        "command"
      ],
      "title": "ExecParams",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "GadgetInitRunParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "discovery_data": {
          "$ref": "#/$defs/GadgetInitDiscoveryData"
        },
        "reasoning_effort": {
          "anyOf": [
            {
              "$ref": "#/$defs/GadgetInitReasoningEffort"
            },
            {
              "type": "null"
            }
          ]
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/GadgetClientMessage"
          }
        }
      },
      "required": [
        "discovery_data",
        "messages"
      ],
      "title": "GadgetInitRunParams",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$defs": {
        "GadgetInitDiscoveryData": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "base_dir_name": {
              "type": "string"
            },
            "base_dir_build_plan": {
              "$ref": "#/$defs/DirBuildPlan"
            }
          },
          "required": [
            "base_dir_name",
            "base_dir_build_plan"
          ]
        },
        "DirBuildPlan": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "detected_providers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "phases": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/BuildPlanPhase"
              }
            }
          },
          "required": [
            "detected_providers",
            "phases"
          ]
        },
        "BuildPlanPhase": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "build_info": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "build_info"
          ]
        },
        "GadgetInitReasoningEffort": {
          "type": "string",
          "enum": [
            "Minimal",
            "Low",
            "Medium",
            "High"
          ]
        },
        "GadgetClientMessage": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "service_message": {
              "$ref": "#/$defs/GadgetServiceMessage"
            },
            "client_reply": {
              "anyOf": [
                {
                  "$ref": "#/$defs/GadgetClientReply"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "service_message"
          ]
        },
        "GadgetServiceMessage": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "ReadFile": {
                  "$ref": "#/$defs/ReadFileArgs"
                }
              },
              "required": [
                "ReadFile"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "ListDir": {
                  "$ref": "#/$defs/ListDirArgs"
                }
              },
              "required": [
                "ListDir"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "DirBuildPlan": {
                  "$ref": "#/$defs/DirBuildPlanArgs"
                }
              },
              "required": [
                "DirBuildPlan"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Finish": {
                  "$ref": "#/$defs/GadgetInitData"
                }
              },
              "required": [
                "Finish"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Error": {
                  "type": "string"
                }
              },
              "required": [
                "Error"
              ],
              "additionalProperties": false
            }
          ]
        },
        "ReadFileArgs": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Paths of the file to read (relative to root directory)"
            }
          },
          "required": [
            "path"
          ]
        },
        "ListDirArgs": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the file or directory to list (relative to root directory)"
            },
            "max_depth": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0
            }
          },
          "required": [
            "path"
          ]
        },
        "DirBuildPlanArgs": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the directory to attempt to build (relative to root directory)"
            }
          },
          "required": [
            "path"
          ]
        },
        "GadgetInitData": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "plan": {
              "$ref": "#/$defs/InitPlan"
            }
          },
          "required": [
            "plan"
          ]
        },
        "InitPlan": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitApp"
              }
            },
            "volumes": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitVolume"
              }
            },
            "issues": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitIssue"
              }
            },
            "warnings": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitWarning"
              }
            }
          },
          "required": [
            "apps",
            "volumes",
            "issues",
            "warnings"
          ]
        },
        "InitApp": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "$ref": "#/$defs/InitAppSource"
            },
            "snapshot_strategy": {
              "anyOf": [
                {
                  "$ref": "#/$defs/InitAppSnapshotStrategy"
                },
                {
                  "type": "null"
                }
              ]
            },
            "envs": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppEnv"
              }
            },
            "depends_on": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppDependsOn"
              },
              "description": "Services that this app depends on"
            },
            "exposed_ports": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppExposedPort"
              }
            },
            "binded_volumes": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppBindedVolume"
              }
            }
          },
          "required": [
            "name",
            "source"
          ]
        },
        "InitAppSource": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "BuildAutomatically": {
                  "$ref": "#/$defs/InitAppBuildAuto"
                }
              },
              "required": [
                "BuildAutomatically"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "BuildWithDockerfile": {
                  "$ref": "#/$defs/InitAppBuildDockerfile"
                }
              },
              "required": [
                "BuildWithDockerfile"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Image": {
                  "$ref": "#/$defs/InitAppImage"
                }
              },
              "required": [
                "Image"
              ],
              "additionalProperties": false
            }
          ]
        },
        "InitAppBuildAuto": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "dir_path": {
              "type": [
                "string",
                "null"
              ],
              "description": "Path of the directory to build (relative to root directory)"
            },
            "append_docker_ignore_extra": {
              "anyOf": [
                {
                  "$ref": "#/$defs/InitAppendDockerIgnoreExtra"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Extra files to ignore (relative to root directory)"
            }
          }
        },
        "InitAppendDockerIgnoreExtra": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the file to append to (relative to root directory)"
            },
            "lines": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "path",
            "lines"
          ]
        },
        "InitAppBuildDockerfile": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "dir_path": {
              "type": "string",
              "description": "Path of the Dockerfile to build (relative to root directory)"
            },
            "dockerfile_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "Name of the Dockerfile to use (relative to root directory) (default: Dockerfile)"
            },
            "append_docker_ignore_extra": {
              "anyOf": [
                {
                  "$ref": "#/$defs/InitAppendDockerIgnoreExtra"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Extra files to ignore (relative to root directory)"
            }
          },
          "required": [
            "dir_path"
          ]
        },
        "InitAppImage": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": [
            "image"
          ]
        },
        "InitAppSnapshotStrategy": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SuspendBeforeStart",
                "SuspendAfterListenOnAnyPort",
                "SuspendManually"
              ]
            },
            {
              "type": "object",
              "properties": {
                "SuspendAfterListenOnPort": {
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0,
                  "maximum": 65535
                }
              },
              "required": [
                "SuspendAfterListenOnPort"
              ],
              "additionalProperties": false
            }
          ]
        },
        "InitAppEnv": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "$ref": "#/$defs/InitAppEnvValue"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "InitAppEnvValue": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "Literal": {
                  "type": "string"
                }
              },
              "required": [
                "Literal"
              ],
              "additionalProperties": false,
              "description": "A literal string value"
            },
            {
              "type": "object",
              "properties": {
                "Expression": {
                  "type": "string"
                }
              },
              "required": [
                "Expression"
              ],
              "additionalProperties": false,
              "description": "CEL expression (or interpolation of CEL expressions). You must include the ${{ }} in the expression (with DOUBLE curly braces).\nex: http://${{ env.VAR_NAME }}-${{ env.VAR_NAME2 }}.com/${{ env.VAR_NAME3 }}"
            },
            {
              "type": "object",
              "properties": {
                "CopyFromEnvFile": {
                  "type": "object",
                  "properties": {
                    "var_name": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "var_name"
                  ]
                }
              },
              "required": [
                "CopyFromEnvFile"
              ],
              "additionalProperties": false,
              "description": "The value of this variable will be copied from the .env file when the app is deployed"
            }
          ]
        },
        "InitAppDependsOn": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "name"
          ]
        },
        "InitAppExposedPort": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0,
              "maximum": 65535,
              "description": "Port inside the container"
            },
            "mode": {
              "$ref": "#/$defs/InitAppExposedPortMode"
            }
          },
          "required": [
            "name",
            "port",
            "mode"
          ]
        },
        "InitAppExposedPortMode": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "Internal": {
                  "type": "object",
                  "properties": {
                    "protocol": {
                      "$ref": "#/$defs/InitAppExposedPortProtocolInternal"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "protocol"
                  ]
                }
              },
              "required": [
                "Internal"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "External": {
                  "type": "object",
                  "properties": {
                    "protocol": {
                      "$ref": "#/$defs/InitAppExposedPortProtocolExternal"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "protocol"
                  ]
                }
              },
              "required": [
                "External"
              ],
              "additionalProperties": false
            }
          ]
        },
        "InitAppExposedPortProtocolInternal": {
          "type": "string",
          "enum": [
            "Tcp"
          ]
        },
        "InitAppExposedPortProtocolExternal": {
          "type": "string",
          "enum": [
            "Tls",
            "Https"
          ]
        },
        "InitAppBindedVolume": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            },
            "path": {
              "type": "string",
              "description": "Path of the volume inside the container"
            }
          },
          "required": [
            "name",
            "path"
          ]
        },
        "InitVolume": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "name"
          ]
        },
        "InitIssue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "message": {
              "type": "string"
            }
          },
          "required": [
            "message"
          ]
        },
        "InitWarning": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "message": {
              "type": "string"
            }
          },
          "required": [
            "message"
          ]
        },
        "GadgetClientReply": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "ReadFile": {
                  "$ref": "#/$defs/ReadFileResult"
                }
              },
              "required": [
                "ReadFile"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "ListDir": {
                  "$ref": "#/$defs/ListDirResult"
                }
              },
              "required": [
                "ListDir"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "DirBuildPlan": {
                  "$ref": "#/$defs/DirBuildPlan"
                }
              },
              "required": [
                "DirBuildPlan"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Error": {
                  "type": "string"
                }
              },
              "required": [
                "Error"
              ],
              "additionalProperties": false
            }
          ]
        },
        "ReadFileResult": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the file (relative to root directory)"
            },
            "content": {
              "type": "string"
            }
          },
          "required": [
            "path",
            "content"
          ]
        },
        "ListDirResult": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/ListDirItem"
              }
            }
          },
          "required": [
            "items"
          ]
        },
        "ListDirItem": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the file or directory (relative to root directory)"
            },
            "is_dir": {
              "type": "boolean"
            },
            "size": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          "required": [
            "path",
            "is_dir",
            "size"
          ]
        }
      }
    },
    "GadgetInitRunResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/GadgetServiceMessage"
          }
        }
      },
      "required": [
        "messages"
      ],
      "title": "GadgetInitRunResponse",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$defs": {
        "GadgetServiceMessage": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "ReadFile": {
                  "$ref": "#/$defs/ReadFileArgs"
                }
              },
              "required": [
                "ReadFile"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "ListDir": {
                  "$ref": "#/$defs/ListDirArgs"
                }
              },
              "required": [
                "ListDir"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "DirBuildPlan": {
                  "$ref": "#/$defs/DirBuildPlanArgs"
                }
              },
              "required": [
                "DirBuildPlan"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Finish": {
                  "$ref": "#/$defs/GadgetInitData"
                }
              },
              "required": [
                "Finish"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Error": {
                  "type": "string"
                }
              },
              "required": [
                "Error"
              ],
              "additionalProperties": false
            }
          ]
        },
        "ReadFileArgs": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Paths of the file to read (relative to root directory)"
            }
          },
          "required": [
            "path"
          ]
        },
        "ListDirArgs": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the file or directory to list (relative to root directory)"
            },
            "max_depth": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0
            }
          },
          "required": [
            "path"
          ]
        },
        "DirBuildPlanArgs": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the directory to attempt to build (relative to root directory)"
            }
          },
          "required": [
            "path"
          ]
        },
        "GadgetInitData": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "plan": {
              "$ref": "#/$defs/InitPlan"
            }
          },
          "required": [
            "plan"
          ]
        },
        "InitPlan": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitApp"
              }
            },
            "volumes": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitVolume"
              }
            },
            "issues": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitIssue"
              }
            },
            "warnings": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/InitWarning"
              }
            }
          },
          "required": [
            "apps",
            "volumes",
            "issues",
            "warnings"
          ]
        },
        "InitApp": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "$ref": "#/$defs/InitAppSource"
            },
            "snapshot_strategy": {
              "anyOf": [
                {
                  "$ref": "#/$defs/InitAppSnapshotStrategy"
                },
                {
                  "type": "null"
                }
              ]
            },
            "envs": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppEnv"
              }
            },
            "depends_on": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppDependsOn"
              },
              "description": "Services that this app depends on"
            },
            "exposed_ports": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppExposedPort"
              }
            },
            "binded_volumes": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/$defs/InitAppBindedVolume"
              }
            }
          },
          "required": [
            "name",
            "source"
          ]
        },
        "InitAppSource": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "BuildAutomatically": {
                  "$ref": "#/$defs/InitAppBuildAuto"
                }
              },
              "required": [
                "BuildAutomatically"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "BuildWithDockerfile": {
                  "$ref": "#/$defs/InitAppBuildDockerfile"
                }
              },
              "required": [
                "BuildWithDockerfile"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "Image": {
                  "$ref": "#/$defs/InitAppImage"
                }
              },
              "required": [
                "Image"
              ],
              "additionalProperties": false
            }
          ]
        },
        "InitAppBuildAuto": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "dir_path": {
              "type": [
                "string",
                "null"
              ],
              "description": "Path of the directory to build (relative to root directory)"
            },
            "append_docker_ignore_extra": {
              "anyOf": [
                {
                  "$ref": "#/$defs/InitAppendDockerIgnoreExtra"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Extra files to ignore (relative to root directory)"
            }
          }
        },
        "InitAppendDockerIgnoreExtra": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "description": "Path of the file to append to (relative to root directory)"
            },
            "lines": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "path",
            "lines"
          ]
        },
        "InitAppBuildDockerfile": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "dir_path": {
              "type": "string",
              "description": "Path of the Dockerfile to build (relative to root directory)"
            },
            "dockerfile_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "Name of the Dockerfile to use (relative to root directory) (default: Dockerfile)"
            },
            "append_docker_ignore_extra": {
              "anyOf": [
                {
                  "$ref": "#/$defs/InitAppendDockerIgnoreExtra"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Extra files to ignore (relative to root directory)"
            }
          },
          "required": [
            "dir_path"
          ]
        },
        "InitAppImage": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": [
            "image"
          ]
        },
        "InitAppSnapshotStrategy": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SuspendBeforeStart",
                "SuspendAfterListenOnAnyPort",
                "SuspendManually"
              ]
            },
            {
              "type": "object",
              "properties": {
                "SuspendAfterListenOnPort": {
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0,
                  "maximum": 65535
                }
              },
              "required": [
                "SuspendAfterListenOnPort"
              ],
              "additionalProperties": false
            }
          ]
        },
        "InitAppEnv": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "$ref": "#/$defs/InitAppEnvValue"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "InitAppEnvValue": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "Literal": {
                  "type": "string"
                }
              },
              "required": [
                "Literal"
              ],
              "additionalProperties": false,
              "description": "A literal string value"
            },
            {
              "type": "object",
              "properties": {
                "Expression": {
                  "type": "string"
                }
              },
              "required": [
                "Expression"
              ],
              "additionalProperties": false,
              "description": "CEL expression (or interpolation of CEL expressions). You must include the ${{ }} in the expression (with DOUBLE curly braces).\nex: http://${{ env.VAR_NAME }}-${{ env.VAR_NAME2 }}.com/${{ env.VAR_NAME3 }}"
            },
            {
              "type": "object",
              "properties": {
                "CopyFromEnvFile": {
                  "type": "object",
                  "properties": {
                    "var_name": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "var_name"
                  ]
                }
              },
              "required": [
                "CopyFromEnvFile"
              ],
              "additionalProperties": false,
              "description": "The value of this variable will be copied from the .env file when the app is deployed"
            }
          ]
        },
        "InitAppDependsOn": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "name"
          ]
        },
        "InitAppExposedPort": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0,
              "maximum": 65535,
              "description": "Port inside the container"
            },
            "mode": {
              "$ref": "#/$defs/InitAppExposedPortMode"
            }
          },
          "required": [
            "name",
            "port",
            "mode"
          ]
        },
        "InitAppExposedPortMode": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "Internal": {
                  "type": "object",
                  "properties": {
                    "protocol": {
                      "$ref": "#/$defs/InitAppExposedPortProtocolInternal"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "protocol"
                  ]
                }
              },
              "required": [
                "Internal"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "External": {
                  "type": "object",
                  "properties": {
                    "protocol": {
                      "$ref": "#/$defs/InitAppExposedPortProtocolExternal"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "protocol"
                  ]
                }
              },
              "required": [
                "External"
              ],
              "additionalProperties": false
            }
          ]
        },
        "InitAppExposedPortProtocolInternal": {
          "type": "string",
          "enum": [
            "Tcp"
          ]
        },
        "InitAppExposedPortProtocolExternal": {
          "type": "string",
          "enum": [
            "Tls",
            "Https"
          ]
        },
        "InitAppBindedVolume": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            },
            "path": {
              "type": "string",
              "description": "Path of the volume inside the container"
            }
          },
          "required": [
            "name",
            "path"
          ]
        },
        "InitVolume": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "name"
          ]
        },
        "InitIssue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "message": {
              "type": "string"
            }
          },
          "required": [
            "message"
          ]
        },
        "InitWarning": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "message": {
              "type": "string"
            }
          },
          "required": [
            "message"
          ]
        }
      }
    },
    "ListNamespaces": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Namespace"
          }
        }
      },
      "required": [
        "namespaces"
      ],
      "title": "ListNamespaces",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$defs": {
        "Namespace": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "created_at": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          "required": [
            "name",
            "created_at"
          ]
        }
      }
    },
    "LogStreamItem": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "message": {
          "type": "string"
        },
        "target_stream": {
          "$ref": "#/$defs/LogStreamTarget"
        }
      },
      "required": [
        "timestamp",
        "message",
        "target_stream"
      ],
      "title": "LogStreamItem",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$defs": {
        "LogStreamTarget": {
          "type": "string",
          "enum": [
            "stdout",
            "stderr"
          ]
        }
      }
    },
    "LogStreamParams": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "machine_name": {
              "type": "string"
            },
            "start_ts_ns": {
              "type": [
                "string",
                "null"
              ]
            },
            "end_ts_ns": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "machine_name"
          ]
        },
        {
          "type": "object",
          "properties": {
            "group_name": {
              "type": "string"
            },
            "start_ts_ns": {
              "type": [
                "string",
                "null"
              ]
            },
            "end_ts_ns": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "group_name"
          ]
        }
      ],
      "title": "LogStreamParams",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "Machine": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "machine": {
              "$ref": "#/$defs/MachineV1"
            }
          },
          "required": [
            "machine"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "machine.v1": {
              "$ref": "#/$defs/MachineV1"
            }
          },
          "required": [
            "machine.v1"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MachineBuild": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "auto"
          ]
        },
        {
          "type": "object",
          "properties": {
            "options": {
              "$ref": "#/$defs/MachineBuildOptions"
            }
          },
          "required": [
            "options"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "docker": {
              "$ref": "#/$defs/MachineDockerOptions"
            }
          },
          "required": [
            "docker"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MachineBuildOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "tag": {
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "dir": {
          "type": [
            "string",
            "null"
          ]
        },
        "envs": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "providers": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "build-image": {
          "type": [
            "string",
            "null"
          ]
        },
        "variables": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "static-assets": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "phases": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "$ref": "#/$defs/MachineBuildPlanPhase"
          }
        },
        "start": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineBuildPlanStartPhase"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "MachineBuildPlanPhase": {
      "type": "object",
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "depends-on": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "nix-pkgs": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "nix-libs": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "nix-overlays": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "nixpkgs-archive": {
          "type": [
            "string",
            "null"
          ]
        },
        "apt-pkgs": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "cmds": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "only-include-files": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "cache-directories": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "paths": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MachineBuildPlanStartPhase": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": [
            "string",
            "null"
          ]
        },
        "run-image": {
          "type": [
            "string",
            "null"
          ]
        },
        "only-include-files": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "MachineDependency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        }
      },
      "required": [
        "name"
      ]
    },
    "MachineDockerOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "tag": {
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "context": {
          "type": [
            "string",
            "null"
          ]
        },
        "dockerfile": {
          "type": [
            "string",
            "null"
          ]
        },
        "args": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "MachineMode": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "regular"
          ]
        },
        {
          "type": "object",
          "properties": {
            "flash": {
              "type": "object",
              "properties": {
                "strategy": {
                  "$ref": "#/$defs/MachineSnapshotStrategy"
                },
                "timeout": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint64",
                  "minimum": 0
                }
              },
              "required": [
                "strategy"
              ]
            }
          },
          "required": [
            "flash"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MachinePhase": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "idle",
            "pulling-image",
            "waiting",
            "creating",
            "booting",
            "ready",
            "suspending",
            "suspended",
            "stopping",
            "stopped",
            "restarting"
          ]
        },
        {
          "type": "object",
          "properties": {
            "error": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "required": [
            "error"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MachineResources": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0,
          "maximum": 255
        },
        "memory": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "cpu",
        "memory"
      ]
    },
    "MachineRestartPolicy": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "on-failure",
        "remove"
      ]
    },
    "MachineSnapshotStrategy": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "first-listen",
            "user-space-ready",
            "manual"
          ]
        },
        {
          "type": "object",
          "properties": {
            "nth-listen": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          "required": [
            "nth-listen"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "listen-on-port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0,
              "maximum": 65535
            }
          },
          "required": [
            "listen-on-port"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MachineStatus": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "phase": {
          "$ref": "#/$defs/MachinePhase"
        },
        "image_id": {
          "type": [
            "string",
            "null"
          ]
        },
        "image_resolved_reference": {
          "type": [
            "string",
            "null"
          ]
        },
        "machine_id": {
          "type": [
            "string",
            "null"
          ]
        },
        "machine_ip": {
          "type": [
            "string",
            "null"
          ]
        },
        "machine_tap": {
          "type": [
            "string",
            "null"
          ]
        },
        "machine_image_volume_id": {
          "type": [
            "string",
            "null"
          ]
        },
        "last_boot_time_us": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0
        },
        "first_boot_time_us": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0
        },
        "last_restarting_time_us": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0
        },
        "last_exit_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "restart_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "hash",
        "phase"
      ]
    },
    "MachineV1": {
      "type": "object",
      "properties": {
        "tags": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "name": {
          "type": "string"
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "build": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineBuild"
            },
            {
              "type": "null"
            }
          ]
        },
        "resources": {
          "$ref": "#/$defs/MachineResources"
        },
        "restart-policy": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineRestartPolicy"
            },
            {
              "type": "null"
            }
          ]
        },
        "mode": {
          "anyOf": [
            {
              "$ref": "#/$defs/MachineMode"
            },
            {
              "type": "null"
            }
          ]
        },
        "volumes": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/MachineVolumeBinding"
          }
        },
        "command": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "environment": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "depends-on": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/MachineDependency"
          }
        }
      },
      "required": [
        "name",
        "resources"
      ]
    },
    "MachineVolumeBinding": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "path"
      ]
    },
    "Me": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "sub": {
          "type": "string"
        }
      },
      "required": [
        "tenant",
        "sub"
      ],
      "title": "Me",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "name",
        "created_at"
      ],
      "title": "Namespace",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "QueryParams": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "var": {
          "type": "object",
          "additionalProperties": true
        },
        "git": {
          "anyOf": [
            {
              "$ref": "#/$defs/QueryGitInfo"
            },
            {
              "type": "null"
            }
          ]
        },
        "lttle_profile": {
          "type": "string"
        }
      },
      "required": [
        "query",
        "env",
        "var",
        "lttle_profile"
      ],
      "title": "QueryParams",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$defs": {
        "QueryGitInfo": {
          "type": "object",
          "properties": {
            "branch": {
              "type": [
                "string",
                "null"
              ]
            },
            "commit_sha": {
              "type": "string"
            },
            "commit_message": {
              "type": "string"
            },
            "tag": {
              "type": [
                "string",
                "null"
              ]
            },
            "latest_tag": {
              "type": [
                "string",
                "null"
              ]
            },
            "ref": {
              "type": "string"
            }
          },
          "required": [
            "commit_sha",
            "commit_message",
            "ref"
          ]
        }
      }
    },
    "QueryResponse": {
      "type": "object",
      "properties": {
        "query_result": true
      },
      "required": [
        "query_result"
      ],
      "title": "QueryResponse",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "RegistryRobot": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        }
      },
      "required": [
        "registry",
        "user",
        "pass"
      ],
      "title": "RegistryRobot",
      "$schema": "https://json-schema.org/draft/2020-12/schema"
    },
    "Service": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "service": {
              "$ref": "#/$defs/ServiceV1"
            }
          },
          "required": [
            "service"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "service.v1": {
              "$ref": "#/$defs/ServiceV1"
            }
          },
          "required": [
            "service.v1"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ServiceBind": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "tcp"
          ]
        },
        {
          "type": "object",
          "properties": {
            "internal": {
              "type": "object",
              "properties": {
                "port": {
                  "description": "If not provided, the port will be inferred from target port.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint16",
                  "minimum": 0,
                  "maximum": 65535
                }
              }
            }
          },
          "required": [
            "internal"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "external": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "description": "If not provided, the port will be inferred from protocol or target port.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint16",
                  "minimum": 0,
                  "maximum": 65535
                },
                "protocol": {
                  "$ref": "#/$defs/ServiceBindExternalProtocol"
                }
              },
              "required": [
                "host",
                "protocol"
              ]
            }
          },
          "required": [
            "external"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ServiceBindExternalProtocol": {
      "type": "string",
      "enum": [
        "http",
        "https",
        "tls",
        "tcp"
      ]
    },
    "ServiceStatus": {
      "type": "object",
      "properties": {
        "service_ip": {
          "type": [
            "string",
            "null"
          ]
        },
        "internal_dns_hostname": {
          "type": [
            "string",
            "null"
          ]
        },
        "allocated_tcp_port": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "ServiceTarget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "port": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0,
          "maximum": 65535
        },
        "protocol": {
          "$ref": "#/$defs/ServiceTargetProtocol"
        },
        "connection-tracking": {
          "anyOf": [
            {
              "$ref": "#/$defs/ServiceTargetConnectionTracking"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "name",
        "port",
        "protocol"
      ]
    },
    "ServiceTargetConnectionTracking": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "connection-aware"
          ]
        },
        {
          "type": "object",
          "properties": {
            "traffic-aware": {
              "type": "object",
              "properties": {
                "inactivity-timeout": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint64",
                  "minimum": 0
                }
              }
            }
          },
          "required": [
            "traffic-aware"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ServiceTargetProtocol": {
      "type": "string",
      "enum": [
        "http",
        "tcp"
      ]
    },
    "ServiceV1": {
      "type": "object",
      "properties": {
        "tags": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/$defs/ServiceTarget"
        },
        "bind": {
          "$ref": "#/$defs/ServiceBind"
        }
      },
      "required": [
        "name",
        "target",
        "bind"
      ]
    },
    "Volume": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "volume": {
              "$ref": "#/$defs/VolumeV1"
            }
          },
          "required": [
            "volume"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "volume.v1": {
              "$ref": "#/$defs/VolumeV1"
            }
          },
          "required": [
            "volume.v1"
          ],
          "additionalProperties": false
        }
      ]
    },
    "VolumeMode": {
      "type": "string",
      "enum": [
        "read-only",
        "writeable"
      ]
    },
    "VolumeStatus": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "volume_id": {
          "type": [
            "string",
            "null"
          ]
        },
        "size_bytes": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "hash",
        "size_bytes"
      ]
    },
    "VolumeV1": {
      "type": "object",
      "properties": {
        "tags": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "name": {
          "type": "string"
        },
        "mode": {
          "$ref": "#/$defs/VolumeMode"
        },
        "size": {
          "type": "string",
          "description": "The size of the volume in human readable format"
        }
      },
      "required": [
        "name",
        "mode",
        "size"
      ]
    }
  }
}